server.port=8080

# ===============================
# DATABASE
# ===============================

spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/movie_rating?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# ==============================================================
# = Initialize the database using data.sql script
# ==============================================================
 spring.datasource.initialization-mode=always
# ===============================
# JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# create, create-drop cercare su google le differenze!
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update
# questo usa MyISAM
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
# questo usa InnoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect


# ==============================================================
# = Spring Security / Queries for AuthenticationManagerBuilder
# ==============================================================
spring.queries.users-query=select email, password, active from utente where email=?
spring.queries.roles-query=select u.email, r.ruolo from utente u inner join utente_ruolo ur on(u.utente_id=ur.utente_id) inner join ruolo r on(ur.ruolo_id=r.ruolo_id) where u.email=?









# LOG
# ------------------------------------------------------------
#java.util.logging.manager=org.apache.logging.log4j.jul.LogManager
#logging.level.org.springframework.web=DEBUG
#logging.level.org.hibernate=ERROR
#logging.level.it.nextre.academy=DEBUG
#logging.appenders = console
#logging.appender.console.type = Console
#logging.appender.console.name = STDOUT
#logging.appender.console.layout.type = PatternLayout
#logging.appender.console.layout.pattern = [%-5level] - %msg%n



spring.mvc.view.prefix: /WEB-INF/views/
spring.mvc.view.suffix: .jsp